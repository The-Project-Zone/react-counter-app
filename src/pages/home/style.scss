@import "src/components/common/css/variables.scss";
@import "src/components/common/css/mixins.scss";

@keyframes flashText {
  0% {opacity: 0;}
  50% {opacity: 1;}
  100% {opacity: 0;}
}
@-webkit-keyframes flashText {
  0% {opacity: 0;}
  50% {opacity: 1;}
  100% {opacity: 0;}
}
@-moz-keyframes flashText {
  0% {opacity: 0;}
  50% {opacity: 1;}
  100% {opacity: 0;}
}
@-ms-keyframes flashText {
  0% {opacity: 0;}
  50% {opacity: 1;}
  100% {opacity: 0;}
}

.mainContainer {
  min-height: 100vh;
  .posContainer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    width: 100%;
    padding: 20px;
    .num {
      display: block;
      font-size: 4.5rem;
      font-weight: 900;
    }
  }
  .buttonContainer {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 20px 20px 30px;
  }
  .controls {
    position: fixed;
    top: 7%;
    left: 50%;
    transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    padding: 7px 10px;
    .btn {
      width: 27px;
      height: 27px;
      padding: 3px;
      background: transparent;
      vertical-align: unset;
      margin: 0 4px;
    }
    .btn:active {
      border-color: transparent;
    }
  }
  .configModal {
    background: #262626;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 50;
    width: 100%;
    height: 100%;
    padding: 60px 20px;
    @include app-transition(all, 0.15s, linear);
    .closeBtn {
      padding: 0;
      position: absolute;
      top: 15px;
      right: 15px;
      width: 40px;
      height: 40px;
      border: 0;
      outline: 0;
    }
    .closeBtn:active {
      border: 0;
      outline: 0;
    }
    .customRow.top {
      .segment {
        .formGroup {
          .form-label {
            font-size: 0.8rem;
            color: $white;
            font-weight: 400;
          }
          .form-control {
            background: transparent;
            line-height: 35px;
            color: $white;
            border-radius: 10px;
          }
          .form-control:disabled {
            color: #aaa;
            border-color: #444;
          }
          .error {
            background: $red;
            color: $white;
            font-size: 0.8rem;
            padding: 5px 8px;
            border-radius: 8px;
            position: absolute;
            top: 12px;
            right: 5px;
            @include app-transition(all, 0.15s, linear);
          }
          .error:after {
            content: "";
            position: absolute;
            bottom: -6px;
            right: 7px;
            width: 0;
            height: 0;
            border-left: 7px solid transparent;
            border-right: 7px solid transparent;
            border-top: 7px solid $red;
          }
          .error.hiddenTransform {
            opacity: 0;
            visibility: hidden;
            transform: translateY(10px);
            -webkit-transform: translateY(10px);
            z-index: -10;
          }
          .form-control:focus,
          .form-control:focus-visible {
            outline: none;
            box-shadow: none;
            border-color: #ced4da;
          }
          .form-control:disabled {
            background: rgba(0, 0, 0, 0.1);
            opacity: 0.5;
          }
          .counterSetButton {
            font-size: 0.9rem;
            position: absolute;
            bottom: 9px;
            right: 9px;
            padding: 5px 15px;
            line-height: 20px;
            font-weight: 600;
          }
          .counterSetButton:disabled {
            opacity: 0.8;
            background: #aaa;
            border-color: #aaa;
          }
          .palette {
            margin-left: -2%;
            .color {
              width: 20%;
              max-width: 60px;
              float: left;
              border-radius: 10px;
              margin: 0 2% 4%;
              cursor: pointer;
            }
            .color.active {
              position: relative;
              border: 1px solid $white;
              .tick {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                -webkit-transform: translate(-50%, -50%);
                width: 20px;
                height: 20px;
                background: $white;
                border-radius: 50%;
                padding: 2px;
              }
            }
            .color:before {
              content: "";
              padding-top: 100%;
              display: block;
            }
          }
          .limitLabel  {
            width: 100px;
            float: left;
          }
          .sliderLabel {
            width: 60px;
            float: right;
            padding: 5px;
            background: #444;
            border-radius: 10px;
            transform: translateY(-5px);
            -webkit-transform: translateY(-5px);
            input[type=checkbox] {
              opacity: 0;
              position: absolute;
              top: 0;
              left: 0;
            }
            .circle {
              width: 17px;
              height: 17px;
              display: block;
              border-radius: 50%;
              background: #bbb;
              @include app-transition(all, 0.15s, linear);
            }
            input[type=checkbox]:checked ~ .circle {
              transform: translateX(33px);
              -webkit-transform: translateX(33px);
              background: $white;
            }
          }
        }
      }
    }
  }
  .configModal.hiddenTransform {
    opacity: 0;
    visibility: hidden;
    transform: translateY(30px);
    -webkit-transform: translateY(30px);
    z-index: -10;
  }
  .limitor {
    position: absolute;
    bottom: 120px;
    left: 50%;
    transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    width: 100%;
    text-align: center;
    .value, .text {
      display: block;
      @include app-transition(all, 0.15s, linear);
    }
    .text {
      font-size: 0.8rem;
    }
    .value {
      opacity: 0;
      visibility: hidden;
      transform: translateY(10px);
      -webkit-transform: translateY(10px);
    }
  }
  .limitor.white {
    color: $white;
    .text {
      color: #888;
    }
  }
  .limitor.black {
    color: $black;
    .text {
      color: #444;
    }
  }
  .limitor.active {
    .text {
      color: $white;
    }
    .value {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
      -webkit-transform: translateY(0);
    }
  }
  .limitor.white.active {
    .text {
      color: $white;
    }
  }
  .limitor.black.active {
    .text {
      color: $black;
    }
  }
  .limitor.maxed {
    .text {
      animation: flashText 1s infinite;
      -webkit-animation: flashText 1s infinite;
    }
  }
}
@media only screen and (min-width: 768px) {
  .mainContainer {
    .posContainer {
      .num {
        font-size: 7.0rem;
      }
    }
    .buttonContainer {
      max-width: 1200px;
      bottom: auto;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      -webkit-transform: translate(-50%, -50%);
      padding: 40px;
      .btn {
        margin: 0;
        width: 60px;
        height: 60px;
      }
      .btn.increment {
        float: right;
      }
      .btn.decrement {
        float: left;
      }
    }
    .configModal {
      .customRow.top {
        width: 400px;
        margin: 70px auto;
      }
    }
  }
}
@media only screen and (min-width: 992px) {
  .mainContainer {
    .configModal {
      .customRow.top {
        width: 900px;
        .segment {
          width: 48%;
          float: left;
        }
        .segment:first-child {
          margin-right: 4%;
        }
        .segment:nth-child(2) {
          .formGroup {
            .form-label {
              text-align: right;
              display: block;
            }
            .palette {
              margin-left: 0;
              margin-right: -2%;
              .color {
                float: right;
              }
            }
          }
        }
      }
    }
  }
}
@media only screen and (min-width: 1200px) {
  .mainContainer {
    .configModal {
      .closeBtn {
        top: 7%;
        right: 7%;
      }
      .customRow.top {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        -webkit-transform: translate(-50%, -50%);
        margin: 0;
      }
    }
    .limitor {
      bottom: 70px;
    }
  }
}
